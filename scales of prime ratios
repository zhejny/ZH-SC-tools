(
~primeNumbers = {
	arg numPrimes;
	var primes=[1], elapsed=0, temp = Array.series(numPrimes.pow(2).asInteger, 1, 1);
	while({ primes.size < numPrimes }, {
		var numFactors;
		numFactors = temp[elapsed].factors.size;
		if ( numFactors==1, { primes = primes++temp[elapsed] });
		elapsed = elapsed+1;
	});
	primes;
};

~primeRatios = { // option to change octave size
	arg numPrimes, octaveSize=2;
	var ratios = ~primeNumbers.value(numPrimes);
	ratios.size.do { arg i; while( { ratios[i] > octaveSize }, { ratios=ratios.put(i, ratios[i]/octaveSize) }) };
	ratios = ratios.put(1, octaveSize);
	ratios = ratios.sort;
	ratios;
};

~primeScale = {
	arg fund, numDegrees, octaveSize=2;
	var scale = fund * ~primeRatios.value(numDegrees, octaveSize);

	scale;
};
)
